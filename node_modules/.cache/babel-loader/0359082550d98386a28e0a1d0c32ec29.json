{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _system = require(\"@mui/system\");\n\nvar _base = require(\"@mui/base\");\n\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\n\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\n\nvar _createTransitions = require(\"../styles/createTransitions\");\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar _utils2 = require(\"../transitions/utils\");\n\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _excluded = [\"BackdropProps\"],\n    _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // This value is closed to what browsers are using internally to\n// trigger a native scroll.\n\n\nvar UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nvar DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nvar claimedSwipeInstance = null; // Exported for test purposes.\n\nfunction reset() {\n  claimedSwipeInstance = null;\n}\n\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\n\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n\n  while (element && element !== rootNode.parentElement) {\n    var style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\n\n\nfunction computeHasNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n      start = _ref.start,\n      current = _ref.current,\n      anchor = _ref.anchor;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar transitionDurationDefault = {\n  enter: _createTransitions.duration.enteringScreen,\n  exit: _createTransitions.duration.leavingScreen\n};\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var props = (0, _system.useThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  var theme = (0, _useTheme.default)();\n  var _props$anchor = props.anchor,\n      anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n      _props$disableBackdro = props.disableBackdropTransition,\n      disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableDiscove = props.disableDiscovery,\n      disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n      _props$disableSwipeTo = props.disableSwipeToOpen,\n      disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n      hideBackdrop = props.hideBackdrop,\n      _props$hysteresis = props.hysteresis,\n      hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n      _props$minFlingVeloci = props.minFlingVelocity,\n      minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n      _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n  var BackdropProps = _props$ModalProps.BackdropProps,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      SwipeAreaProps = props.SwipeAreaProps,\n      _props$swipeAreaWidth = props.swipeAreaWidth,\n      swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n      ModalPropsProp = (0, _objectWithoutPropertiesLoose2.default)(props.ModalProps, _excluded),\n      other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      maybeSwiping = _React$useState2[0],\n      setMaybeSwiping = _React$useState2[1];\n\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  var calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  (0, _useEnhancedEffect.default)(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n        mode = _options$mode === void 0 ? null : _options$mode,\n        _options$changeTransi = options.changeTransition,\n        changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = (0, _useEventCallback.default)(function (nativeEvent) {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var horizontal = (0, _Drawer.isHorizontal)(anchor);\n    var current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = (0, _useEventCallback.default)(function (nativeEvent) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    var currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    var currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      var domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      var hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY);\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = (0, _useEventCallback.default)(function (nativeEvent) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n\n    var anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    var horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    var currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    var currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (claimedSwipeInstance === swipeInstance.current) {\n        claimedSwipeInstance = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, (0, _extends2.default)({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: (0, _extends2.default)({\n        BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: (0, _extends2.default)({}, PaperProps, {\n        style: (0, _extends2.default)({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: paperRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_base.NoSsr, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwipeArea.default, (0, _extends2.default)({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: _propTypes.default.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;","map":{"version":3,"sources":["/Users/mikovainio/FyFy/token-swap/node_modules/@mui/material/node/SwipeableDrawer/SwipeableDrawer.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","reset","_extends2","_objectWithoutPropertiesLoose2","React","_interopRequireWildcard","_propTypes","_utils","_system","_base","_Drawer","_ownerDocument","_ownerWindow","_useEventCallback","_useEnhancedEffect","_createTransitions","_useTheme","_utils2","_SwipeArea","_jsxRuntime","_excluded","_excluded2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","UNCERTAINTY_THRESHOLD","DRAG_STARTED_SIGNAL","claimedSwipeInstance","calculateCurrentX","anchor","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","parentElement","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","computeHasNativeHandler","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","round","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","transitionDurationDefault","enter","duration","enteringScreen","exit","leavingScreen","SwipeableDrawer","forwardRef","inProps","ref","props","useThemeProps","name","theme","disableBackdropTransition","disableDiscovery","disableSwipeToOpen","hideBackdrop","hysteresis","minFlingVelocity","ModalProps","BackdropProps","onClose","onOpen","PaperProps","SwipeAreaProps","swipeAreaWidth","transitionDuration","variant","ModalPropsProp","other","useState","maybeSwiping","setMaybeSwiping","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","mode","changeTransition","anchorRtl","getAnchor","rtlTranslateMultiplier","indexOf","isHorizontal","transform","drawerStyle","webkitTransform","transition","transitions","create","getTransitionProps","easing","undefined","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","nativeEvent","horizontal","changedTouches","currentTarget","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","dx","dy","definitelySwiping","cancelable","preventDefault","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","useEffect","addEventListener","passive","removeEventListener","jsxs","Fragment","children","jsx","pointerEvents","NoSsr","width","process","env","NODE_ENV","propTypes","oneOf","node","bool","number","component","elementTypeAcceptingRef","func","isRequired","object","oneOfType","appear","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.reset = reset;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _system = require(\"@mui/system\");\n\nvar _base = require(\"@mui/base\");\n\nvar _Drawer = _interopRequireWildcard(require(\"../Drawer/Drawer\"));\n\nvar _ownerDocument = _interopRequireDefault(require(\"../utils/ownerDocument\"));\n\nvar _ownerWindow = _interopRequireDefault(require(\"../utils/ownerWindow\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"../utils/useEventCallback\"));\n\nvar _useEnhancedEffect = _interopRequireDefault(require(\"../utils/useEnhancedEffect\"));\n\nvar _createTransitions = require(\"../styles/createTransitions\");\n\nvar _useTheme = _interopRequireDefault(require(\"../styles/useTheme\"));\n\nvar _utils2 = require(\"../transitions/utils\");\n\nvar _SwipeArea = _interopRequireDefault(require(\"./SwipeArea\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"BackdropProps\"],\n      _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nconst UNCERTAINTY_THRESHOLD = 3; // px\n// This is the part of the drawer displayed on touch start.\n\nconst DRAG_STARTED_SIGNAL = 20; // px\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\n\nlet claimedSwipeInstance = null; // Exported for test purposes.\n\nfunction reset() {\n  claimedSwipeInstance = null;\n}\n\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\n\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\n\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\n\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\n\n\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n\n  while (element && element !== rootNode.parentElement) {\n    const style = (0, _ownerWindow.default)(rootNode).getComputedStyle(element);\n\n    if ( // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' || // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {// noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n\n    element = element.parentElement;\n  }\n\n  return domTreeShapes;\n}\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\n\n\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst transitionDurationDefault = {\n  enter: _createTransitions.duration.enteringScreen,\n  exit: _createTransitions.duration.leavingScreen\n};\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = (0, _system.useThemeProps)({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = (0, _useTheme.default)();\n  const {\n    anchor = 'left',\n    disableBackdropTransition = false,\n    disableDiscovery = false,\n    disableSwipeToOpen = iOS,\n    hideBackdrop,\n    hysteresis = 0.52,\n    minFlingVelocity = 450,\n    ModalProps: {\n      BackdropProps\n    } = {},\n    onClose,\n    onOpen,\n    open,\n    PaperProps = {},\n    SwipeAreaProps,\n    swipeAreaWidth = 20,\n    transitionDuration = transitionDurationDefault,\n    variant = 'temporary'\n  } = props,\n        ModalPropsProp = (0, _objectWithoutPropertiesLoose2.default)(props.ModalProps, _excluded),\n        other = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const touchDetected = React.useRef(false); // Ref for transition duration based on / to match swipe speed\n\n  const calculatedDurationRef = React.useRef(); // Use a ref so the open value used is always up to date inside useCallback.\n\n  (0, _useEnhancedEffect.default)(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n\n    if (mode) {\n      transition = theme.transitions.create('all', (0, _utils2.getTransitionProps)({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = (0, _useEventCallback.default)(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    setMaybeSwiping(false); // The swipe wasn't started.\n\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontal = (0, _Drawer.isHorizontal)(anchor);\n    let current;\n\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n    }\n\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n\n      return;\n    }\n\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const handleBodyTouchMove = (0, _useEventCallback.default)(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    } // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n\n\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n\n      claimedSwipeInstance = swipeInstance.current;\n    } // We don't know yet.\n\n\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        } // Shift the starting point.\n\n\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY; // Compensate for the part of the drawer displayed on touch start.\n\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3; // Low Pass filter.\n\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now(); // We are swiping, let's prevent the scroll event on iOS.\n\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = (0, _useEventCallback.default)(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    } // We can only have one node at the time claiming ownership for handling the swipe.\n\n\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    } // At least one element clogs the drawer interaction zone.\n\n\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n\n    const anchorRtl = (0, _Drawer.getAnchor)(theme, anchor);\n    const horizontalSwipe = (0, _Drawer.isHorizontal)(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, (0, _ownerDocument.default)(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, (0, _ownerWindow.default)(nativeEvent.currentTarget));\n\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    setMaybeSwiping(true);\n\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = (0, _ownerDocument.default)(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart); // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/(0, _jsxRuntime.jsxs)(React.Fragment, {\n    children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_Drawer.default, (0, _extends2.default)({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: (0, _extends2.default)({\n        BackdropProps: (0, _extends2.default)({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: (0, _extends2.default)({}, PaperProps, {\n        style: (0, _extends2.default)({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: paperRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/(0, _jsxRuntime.jsx)(_base.NoSsr, {\n      children: /*#__PURE__*/(0, _jsxRuntime.jsx)(_SwipeArea.default, (0, _extends2.default)({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  anchor: _propTypes.default.oneOf(['bottom', 'left', 'right', 'top']),\n\n  /**\n   * The content of the component.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: _propTypes.default.bool,\n\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: _propTypes.default.bool,\n\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  hideBackdrop: _propTypes.default.bool,\n\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: _propTypes.default.number,\n\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: _propTypes.default.number,\n\n  /**\n   * @ignore\n   */\n  ModalProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    BackdropProps: _propTypes.default.shape({\n      component: _utils.elementTypeAcceptingRef\n    })\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: _propTypes.default.func.isRequired,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: _propTypes.default.func.isRequired,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: _propTypes.default.bool.isRequired,\n\n  /**\n   * @ignore\n   */\n  PaperProps: _propTypes.default\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    component: _utils.elementTypeAcceptingRef,\n    style: _propTypes.default.object\n  }),\n\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: _propTypes.default.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: _propTypes.default.number,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n    appear: _propTypes.default.number,\n    enter: _propTypes.default.number,\n    exit: _propTypes.default.number\n  })]),\n\n  /**\n   * @ignore\n   */\n  variant: _propTypes.default.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nvar _default = SwipeableDrawer;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}