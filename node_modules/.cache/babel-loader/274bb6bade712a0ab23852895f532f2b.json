{"ast":null,"code":"import { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { BitKeepWalletAdapter } from '@solana/wallet-adapter-bitkeep';\nimport { BitpieWalletAdapter } from '@solana/wallet-adapter-bitpie';\nimport { BloctoWalletAdapter } from '@solana/wallet-adapter-blocto';\nimport { CloverWalletAdapter } from '@solana/wallet-adapter-clover';\nimport { Coin98WalletAdapter } from '@solana/wallet-adapter-coin98';\nimport { CoinhubWalletAdapter } from '@solana/wallet-adapter-coinhub';\nimport { LedgerWalletAdapter } from '@solana/wallet-adapter-ledger';\nimport { MathWalletAdapter } from '@solana/wallet-adapter-mathwallet';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-phantom';\nimport { SafePalWalletAdapter } from '@solana/wallet-adapter-safepal';\nimport { SlopeWalletAdapter } from '@solana/wallet-adapter-slope';\nimport { SolflareWalletAdapter } from '@solana/wallet-adapter-solflare';\nimport { SolflareWebWalletAdapter, SolletExtensionWalletAdapter, SolletWalletAdapter } from '@solana/wallet-adapter-sollet';\nimport { SolongWalletAdapter } from '@solana/wallet-adapter-solong';\nimport { TokenPocketWalletAdapter } from '@solana/wallet-adapter-tokenpocket';\nimport { TorusWalletAdapter } from '@solana/wallet-adapter-torus';\nexport function getWalletAdapters() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$network = _ref.network,\n      network = _ref$network === void 0 ? WalletAdapterNetwork.Mainnet : _ref$network;\n\n  return [new PhantomWalletAdapter(), new SlopeWalletAdapter(), new SolflareWalletAdapter(), new SolletExtensionWalletAdapter({\n    network: network\n  }), new BitKeepWalletAdapter(), new BitpieWalletAdapter(), new CloverWalletAdapter(), new Coin98WalletAdapter(), new CoinhubWalletAdapter(), new MathWalletAdapter(), new SafePalWalletAdapter(), new SolongWalletAdapter(), new TokenPocketWalletAdapter(), new TorusWalletAdapter(), new LedgerWalletAdapter(), new SolletWalletAdapter({\n    network: network\n  }), new SolflareWebWalletAdapter({\n    network: network\n  }), new BloctoWalletAdapter({\n    network: network\n  })];\n}","map":{"version":3,"sources":["../../src/adapters.ts"],"names":[],"mappings":"AAAA,SAAkB,oBAAlB,QAA8C,6BAA9C;AACA,SAAS,oBAAT,QAAqC,gCAArC;AACA,SAAS,mBAAT,QAAoC,+BAApC;AACA,SAAS,mBAAT,QAAoC,+BAApC;AACA,SAAS,mBAAT,QAAoC,+BAApC;AACA,SAAS,mBAAT,QAAoC,+BAApC;AACA,SAAS,oBAAT,QAAqC,gCAArC;AACA,SAAS,mBAAT,QAAoC,+BAApC;AACA,SAAS,iBAAT,QAAkC,mCAAlC;AACA,SAAS,oBAAT,QAAqC,gCAArC;AACA,SAAS,oBAAT,QAAqC,gCAArC;AACA,SAAS,kBAAT,QAAmC,8BAAnC;AACA,SAAS,qBAAT,QAAsC,iCAAtC;AACA,SACI,wBADJ,EAEI,4BAFJ,EAGI,mBAHJ,QAIO,+BAJP;AAKA,SAAS,mBAAT,QAAoC,+BAApC;AACA,SAAS,wBAAT,QAAyC,oCAAzC;AACA,SAAS,kBAAT,QAAmC,8BAAnC;AAMA,OAAM,SAAU,iBAAV,GAA0F;AAAA,iFAAF,EAAE;AAAA,0BAA5D,OAA4D;AAAA,MAA5D,OAA4D,6BAAlD,oBAAoB,CAAC,OAA6B;;AAC5F,SAAO,CACH,IAAI,oBAAJ,EADG,EAEH,IAAI,kBAAJ,EAFG,EAGH,IAAI,qBAAJ,EAHG,EAIH,IAAI,4BAAJ,CAAiC;AAAE,IAAA,OAAO,EAAP;AAAF,GAAjC,CAJG,EAKH,IAAI,oBAAJ,EALG,EAMH,IAAI,mBAAJ,EANG,EAOH,IAAI,mBAAJ,EAPG,EAQH,IAAI,mBAAJ,EARG,EASH,IAAI,oBAAJ,EATG,EAUH,IAAI,iBAAJ,EAVG,EAWH,IAAI,oBAAJ,EAXG,EAYH,IAAI,mBAAJ,EAZG,EAaH,IAAI,wBAAJ,EAbG,EAcH,IAAI,kBAAJ,EAdG,EAeH,IAAI,mBAAJ,EAfG,EAgBH,IAAI,mBAAJ,CAAwB;AAAE,IAAA,OAAO,EAAP;AAAF,GAAxB,CAhBG,EAiBH,IAAI,wBAAJ,CAA6B;AAAE,IAAA,OAAO,EAAP;AAAF,GAA7B,CAjBG,EAkBH,IAAI,mBAAJ,CAAwB;AAAE,IAAA,OAAO,EAAP;AAAF,GAAxB,CAlBG,CAAP;AAoBH","sourceRoot":"","sourcesContent":["import { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { BitKeepWalletAdapter } from '@solana/wallet-adapter-bitkeep';\nimport { BitpieWalletAdapter } from '@solana/wallet-adapter-bitpie';\nimport { BloctoWalletAdapter } from '@solana/wallet-adapter-blocto';\nimport { CloverWalletAdapter } from '@solana/wallet-adapter-clover';\nimport { Coin98WalletAdapter } from '@solana/wallet-adapter-coin98';\nimport { CoinhubWalletAdapter } from '@solana/wallet-adapter-coinhub';\nimport { LedgerWalletAdapter } from '@solana/wallet-adapter-ledger';\nimport { MathWalletAdapter } from '@solana/wallet-adapter-mathwallet';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-phantom';\nimport { SafePalWalletAdapter } from '@solana/wallet-adapter-safepal';\nimport { SlopeWalletAdapter } from '@solana/wallet-adapter-slope';\nimport { SolflareWalletAdapter } from '@solana/wallet-adapter-solflare';\nimport { SolflareWebWalletAdapter, SolletExtensionWalletAdapter, SolletWalletAdapter, } from '@solana/wallet-adapter-sollet';\nimport { SolongWalletAdapter } from '@solana/wallet-adapter-solong';\nimport { TokenPocketWalletAdapter } from '@solana/wallet-adapter-tokenpocket';\nimport { TorusWalletAdapter } from '@solana/wallet-adapter-torus';\nexport function getWalletAdapters({ network = WalletAdapterNetwork.Mainnet } = {}) {\n    return [\n        new PhantomWalletAdapter(),\n        new SlopeWalletAdapter(),\n        new SolflareWalletAdapter(),\n        new SolletExtensionWalletAdapter({ network }),\n        new BitKeepWalletAdapter(),\n        new BitpieWalletAdapter(),\n        new CloverWalletAdapter(),\n        new Coin98WalletAdapter(),\n        new CoinhubWalletAdapter(),\n        new MathWalletAdapter(),\n        new SafePalWalletAdapter(),\n        new SolongWalletAdapter(),\n        new TokenPocketWalletAdapter(),\n        new TorusWalletAdapter(),\n        new LedgerWalletAdapter(),\n        new SolletWalletAdapter({ network }),\n        new SolflareWebWalletAdapter({ network }),\n        new BloctoWalletAdapter({ network }),\n    ];\n}\n//# sourceMappingURL=adapters.js.map"]},"metadata":{},"sourceType":"module"}