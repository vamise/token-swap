{"ast":null,"code":"import _objectSpread from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/regenerator/index.js\";\nimport EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\nvar Wallet = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Wallet, _EventEmitter);\n\n  var _super = _createSuper(Wallet);\n\n  function Wallet(provider, network) {\n    var _this2;\n\n    _classCallCheck(this, Wallet);\n\n    var _this;\n\n    _this2 = _super.call(this);\n    _this = _assertThisInitialized(_this2);\n\n    _this2._handleMessage = function (e) {\n      if (_this2._injectedProvider && e.source === window || e.origin === _this2._providerUrl.origin && e.source === _this2._popup) {\n        if (e.data.method === 'connected') {\n          var newPublicKey = new PublicKey(e.data.params.publicKey);\n\n          if (!_this2._publicKey || !_this2._publicKey.equals(newPublicKey)) {\n            if (_this2._publicKey && !_this2._publicKey.equals(newPublicKey)) {\n              _this2._handleDisconnect();\n            }\n\n            _this2._publicKey = newPublicKey;\n            _this2._autoApprove = !!e.data.params.autoApprove;\n\n            _this2.emit('connect', _this2._publicKey);\n          }\n        } else if (e.data.method === 'disconnected') {\n          _this2._handleDisconnect();\n        } else if (e.data.result || e.data.error) {\n          if (_this2._responsePromises.has(e.data.id)) {\n            var _this2$_responsePromi = _this2._responsePromises.get(e.data.id),\n                _this2$_responsePromi2 = _slicedToArray(_this2$_responsePromi, 2),\n                resolve = _this2$_responsePromi2[0],\n                reject = _this2$_responsePromi2[1];\n\n            if (e.data.result) {\n              resolve(e.data.result);\n            } else {\n              reject(new Error(e.data.error));\n            }\n          }\n        }\n      }\n    };\n\n    _this2._handleConnect = function () {\n      if (!_this2._handlerAdded) {\n        _this2._handlerAdded = true;\n        window.addEventListener('message', _this2._handleMessage);\n        window.addEventListener('beforeunload', _this2.disconnect);\n      }\n\n      if (_this2._injectedProvider) {\n        return new Promise(function (resolve) {\n          _this2._sendRequest('connect', {});\n\n          resolve();\n        });\n      } else {\n        window.name = 'parent';\n        _this2._popup = window.open(_this2._providerUrl.toString(), '_blank', 'location,resizable,width=460,height=675');\n        return new Promise(function (resolve) {\n          _this2.once('connect', resolve);\n        });\n      }\n    };\n\n    _this2._handleDisconnect = function () {\n      if (_this2._handlerAdded) {\n        _this2._handlerAdded = false;\n        window.removeEventListener('message', _this2._handleMessage);\n        window.removeEventListener('beforeunload', _this2.disconnect);\n      }\n\n      if (_this2._publicKey) {\n        _this2._publicKey = null;\n\n        _this2.emit('disconnect');\n      }\n\n      _this2._responsePromises.forEach(function (_ref, id) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            resolve = _ref2[0],\n            reject = _ref2[1];\n\n        _this2._responsePromises.delete(id);\n\n        reject('Wallet disconnected');\n      });\n    };\n\n    _this2._sendRequest = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(method, params) {\n        var requestId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(method !== 'connect' && !_this.connected)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw new Error('Wallet not connected');\n\n              case 2:\n                requestId = _this._nextRequestId;\n                ++_this._nextRequestId;\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this._responsePromises.set(requestId, [resolve, reject]);\n\n                  if (_this._injectedProvider) {\n                    _this._injectedProvider.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: _objectSpread({\n                        network: _this._network\n                      }, params)\n                    });\n                  } else {\n                    _this._popup.postMessage({\n                      jsonrpc: '2.0',\n                      id: requestId,\n                      method: method,\n                      params: params\n                    }, _this._providerUrl.origin);\n\n                    if (!_this.autoApprove) {\n                      _this._popup.focus();\n                    }\n                  }\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this2.connect = function () {\n      if (_this2._popup) {\n        _this2._popup.close();\n      }\n\n      return _this2._handleConnect();\n    };\n\n    _this2.disconnect = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this._injectedProvider) {\n                _context2.next = 3;\n                break;\n              }\n\n              _context2.next = 3;\n              return _this._sendRequest('disconnect', {});\n\n            case 3:\n              if (_this._popup) {\n                _this._popup.close();\n              }\n\n              _this._handleDisconnect();\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this2.sign = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data, display) {\n        var response, signature, publicKey;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (data instanceof Uint8Array) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                throw new Error('Data must be an instance of Uint8Array');\n\n              case 2:\n                _context3.next = 4;\n                return _this._sendRequest('sign', {\n                  data: data,\n                  display: display\n                });\n\n              case 4:\n                response = _context3.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                return _context3.abrupt(\"return\", {\n                  signature: signature,\n                  publicKey: publicKey\n                });\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3, _x4) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this2.signTransaction = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(transaction) {\n        var response, signature, publicKey;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this._sendRequest('signTransaction', {\n                  message: bs58.encode(transaction.serializeMessage())\n                });\n\n              case 2:\n                response = _context4.sent;\n                signature = bs58.decode(response.signature);\n                publicKey = new PublicKey(response.publicKey);\n                transaction.addSignature(publicKey, signature);\n                return _context4.abrupt(\"return\", transaction);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this2.signAllTransactions = /*#__PURE__*/function () {\n      var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(transactions) {\n        var response, signatures, publicKey;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return _this._sendRequest('signAllTransactions', {\n                  messages: transactions.map(function (tx) {\n                    return bs58.encode(tx.serializeMessage());\n                  })\n                });\n\n              case 2:\n                response = _context5.sent;\n                signatures = response.signatures.map(function (s) {\n                  return bs58.decode(s);\n                });\n                publicKey = new PublicKey(response.publicKey);\n                transactions = transactions.map(function (tx, idx) {\n                  tx.addSignature(publicKey, signatures[idx]);\n                  return tx;\n                });\n                return _context5.abrupt(\"return\", transactions);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    if (isInjectedProvider(provider)) {\n      _this2._injectedProvider = provider;\n    } else if (isString(provider)) {\n      _this2._providerUrl = new URL(provider);\n      _this2._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network: network\n      }).toString();\n    } else {\n      throw new Error('provider parameter must be an injected provider or a URL string.');\n    }\n\n    _this2._network = network;\n    _this2._publicKey = null;\n    _this2._autoApprove = false;\n    _this2._popup = null;\n    _this2._handlerAdded = false;\n    _this2._nextRequestId = 1;\n    _this2._responsePromises = new Map();\n    return _this2;\n  }\n\n  _createClass(Wallet, [{\n    key: \"publicKey\",\n    get: function get() {\n      return this._publicKey;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return this._publicKey !== null;\n    }\n  }, {\n    key: \"autoApprove\",\n    get: function get() {\n      return this._autoApprove;\n    }\n  }]);\n\n  return Wallet;\n}(EventEmitter);\n\nfunction isString(a) {\n  return typeof a === 'string';\n}\n\nfunction isInjectedProvider(a) {\n  return isObject(a) && isFunction(a.postMessage);\n}\n\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}\n\nfunction isFunction(a) {\n  return typeof a === 'function';\n}\n\nexport default Wallet;","map":{"version":3,"sources":["../src/index.js"],"names":["constructor","isInjectedProvider","isString","origin","window","network","e","newPublicKey","resolve","reject","method","requestId","jsonrpc","id","params","data","response","display","signature","bs58","publicKey","message","transaction","messages","transactions","tx","signatures","s","isObject","isFunction","a"],"mappings":"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","sourcesContent":["import EventEmitter from 'eventemitter3';\nimport { PublicKey } from '@solana/web3.js';\nimport bs58 from 'bs58';\n\nexport default class Wallet extends EventEmitter {\n  constructor(provider, network) {\n    super();\n    if (isInjectedProvider(provider)) {\n      this._injectedProvider = provider;\n    } else if (isString(provider)) {\n      this._providerUrl = new URL(provider);\n      this._providerUrl.hash = new URLSearchParams({\n        origin: window.location.origin,\n        network,\n      }).toString();\n    } else {\n      throw new Error(\n        'provider parameter must be an injected provider or a URL string.',\n      );\n    }\n    this._network = network;\n    this._publicKey = null;\n    this._autoApprove = false;\n    this._popup = null;\n    this._handlerAdded = false;\n    this._nextRequestId = 1;\n    this._responsePromises = new Map();\n  }\n\n  _handleMessage = (e) => {\n    if (\n      (this._injectedProvider && e.source === window) ||\n      (e.origin === this._providerUrl.origin && e.source === this._popup)\n    ) {\n      if (e.data.method === 'connected') {\n        const newPublicKey = new PublicKey(e.data.params.publicKey);\n        if (!this._publicKey || !this._publicKey.equals(newPublicKey)) {\n          if (this._publicKey && !this._publicKey.equals(newPublicKey)) {\n            this._handleDisconnect();\n          }\n          this._publicKey = newPublicKey;\n          this._autoApprove = !!e.data.params.autoApprove;\n          this.emit('connect', this._publicKey);\n        }\n      } else if (e.data.method === 'disconnected') {\n        this._handleDisconnect();\n      } else if (e.data.result || e.data.error) {\n        if (this._responsePromises.has(e.data.id)) {\n          const [resolve, reject] = this._responsePromises.get(e.data.id);\n          if (e.data.result) {\n            resolve(e.data.result);\n          } else {\n            reject(new Error(e.data.error));\n          }\n        }\n      }\n    }\n  };\n\n  _handleConnect = () => {\n    if (!this._handlerAdded) {\n      this._handlerAdded = true;\n      window.addEventListener('message', this._handleMessage);\n      window.addEventListener('beforeunload', this.disconnect);\n    }\n    if (this._injectedProvider) {\n      return new Promise((resolve) => {\n        this._sendRequest('connect', {});\n        resolve();\n      });\n    } else {\n      window.name = 'parent';\n      this._popup = window.open(\n        this._providerUrl.toString(),\n        '_blank',\n        'location,resizable,width=460,height=675',\n      );\n      return new Promise((resolve) => {\n        this.once('connect', resolve);\n      });\n    }\n  };\n\n  _handleDisconnect = () => {\n    if (this._handlerAdded) {\n      this._handlerAdded = false;\n      window.removeEventListener('message', this._handleMessage);\n      window.removeEventListener('beforeunload', this.disconnect);\n    }\n    if (this._publicKey) {\n      this._publicKey = null;\n      this.emit('disconnect');\n    }\n    this._responsePromises.forEach(([resolve, reject], id) => {\n      this._responsePromises.delete(id);\n      reject('Wallet disconnected');\n    });\n  };\n\n  _sendRequest = async (method, params) => {\n    if (method !== 'connect' && !this.connected) {\n      throw new Error('Wallet not connected');\n    }\n    const requestId = this._nextRequestId;\n    ++this._nextRequestId;\n    return new Promise((resolve, reject) => {\n      this._responsePromises.set(requestId, [resolve, reject]);\n      if (this._injectedProvider) {\n        this._injectedProvider.postMessage({\n          jsonrpc: '2.0',\n          id: requestId,\n          method,\n          params: {\n            network: this._network,\n            ...params,\n          },\n        });\n      } else {\n        this._popup.postMessage(\n          {\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params,\n          },\n          this._providerUrl.origin,\n        );\n\n        if (!this.autoApprove) {\n          this._popup.focus();\n        }\n      }\n    });\n  };\n\n  get publicKey() {\n    return this._publicKey;\n  }\n\n  get connected() {\n    return this._publicKey !== null;\n  }\n\n  get autoApprove() {\n    return this._autoApprove;\n  }\n\n  connect = () => {\n    if (this._popup) {\n      this._popup.close();\n    }\n    return this._handleConnect();\n  };\n\n  disconnect = async () => {\n    if (this._injectedProvider) {\n      await this._sendRequest('disconnect', {});\n    }\n    if (this._popup) {\n      this._popup.close();\n    }\n    this._handleDisconnect();\n  };\n\n  sign = async (data, display) => {\n    if (!(data instanceof Uint8Array)) {\n      throw new Error('Data must be an instance of Uint8Array');\n    }\n\n    const response = await this._sendRequest('sign', {\n      data,\n      display,\n    });\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    return {\n      signature,\n      publicKey,\n    };\n  };\n\n  signTransaction = async (transaction) => {\n    const response = await this._sendRequest('signTransaction', {\n      message: bs58.encode(transaction.serializeMessage()),\n    });\n    const signature = bs58.decode(response.signature);\n    const publicKey = new PublicKey(response.publicKey);\n    transaction.addSignature(publicKey, signature);\n    return transaction;\n  };\n\n  signAllTransactions = async (transactions) => {\n    const response = await this._sendRequest('signAllTransactions', {\n      messages: transactions.map((tx) => bs58.encode(tx.serializeMessage())),\n    });\n    const signatures = response.signatures.map((s) => bs58.decode(s));\n    const publicKey = new PublicKey(response.publicKey);\n    transactions = transactions.map((tx, idx) => {\n      tx.addSignature(publicKey, signatures[idx]);\n      return tx;\n    });\n    return transactions;\n  };\n}\n\nfunction isString(a) {\n  return typeof a === 'string';\n}\n\nfunction isInjectedProvider(a) {\n  return isObject(a) && isFunction(a.postMessage);\n}\n\nfunction isObject(a) {\n  return typeof a === 'object' && a !== null;\n}\n\nfunction isFunction(a) {\n  return typeof a === 'function';\n}\n"]},"metadata":{},"sourceType":"module"}