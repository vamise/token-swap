{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDevnetFarm = exports.getDevnetPool = void 0;\n\nvar __1 = require(\"..\");\n\nvar config_1 = require(\"./farms/config\");\n\nvar config_2 = require(\"./pools/config\");\n\nfunction getDevnetPool(config) {\n  var entry = Object.entries(__1.OrcaPoolConfig).find(function (arr) {\n    return arr[1] === config;\n  });\n\n  if (!entry) {\n    throw new Error(\"Invalid OrcaPoolConfig\");\n  }\n\n  var key = entry[0];\n\n  if (!isOrcaDevnetPoolConfig(key)) {\n    throw new Error(\"\".concat(key, \" does not exist in devnet\"));\n  }\n\n  return config_2.OrcaPoolConfig[key];\n}\n\nexports.getDevnetPool = getDevnetPool;\n\nfunction getDevnetFarm(config) {\n  var entry = Object.entries(__1.OrcaFarmConfig).find(function (arr) {\n    return arr[1] === config;\n  });\n\n  if (!entry) {\n    throw new Error(\"Invalid OrcaFarmConfig\");\n  }\n\n  var key = entry[0];\n\n  if (!isOrcaDevnetFarmConfig(key)) {\n    throw new Error(\"\".concat(key, \" does not exist in devnet\"));\n  }\n\n  return config_1.OrcaFarmConfig[key];\n}\n\nexports.getDevnetFarm = getDevnetFarm;\n/*** Type guards ***/\n\nfunction isOrcaDevnetPoolConfig(key) {\n  return config_2.OrcaPoolConfig[key] !== undefined;\n}\n\nfunction isOrcaDevnetFarmConfig(key) {\n  return config_1.OrcaFarmConfig[key] !== undefined;\n}","map":{"version":3,"sources":["/Users/mikovainio/FyFy/token-swap/node_modules/@orca-so/sdk/dist/public/devnet/utils.js"],"names":["Object","defineProperty","exports","value","getDevnetFarm","getDevnetPool","__1","require","config_1","config_2","config","entry","entries","OrcaPoolConfig","find","arr","Error","key","isOrcaDevnetPoolConfig","OrcaFarmConfig","isOrcaDevnetFarmConfig","undefined"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,aAAR,GAAwB,KAAK,CAArD;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAAC,IAAD,CAAnB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,gBAAD,CAAxB;;AACA,SAASF,aAAT,CAAuBK,MAAvB,EAA+B;AAC3B,MAAMC,KAAK,GAAGX,MAAM,CAACY,OAAP,CAAeN,GAAG,CAACO,cAAnB,EAAmCC,IAAnC,CAAwC,UAACC,GAAD;AAAA,WAASA,GAAG,CAAC,CAAD,CAAH,KAAWL,MAApB;AAAA,GAAxC,CAAd;;AACA,MAAI,CAACC,KAAL,EAAY;AACR,UAAM,IAAIK,KAAJ,CAAU,wBAAV,CAAN;AACH;;AACD,MAAMC,GAAG,GAAGN,KAAK,CAAC,CAAD,CAAjB;;AACA,MAAI,CAACO,sBAAsB,CAACD,GAAD,CAA3B,EAAkC;AAC9B,UAAM,IAAID,KAAJ,WAAaC,GAAb,+BAAN;AACH;;AACD,SAAOR,QAAQ,CAACI,cAAT,CAAwBI,GAAxB,CAAP;AACH;;AACDf,OAAO,CAACG,aAAR,GAAwBA,aAAxB;;AACA,SAASD,aAAT,CAAuBM,MAAvB,EAA+B;AAC3B,MAAMC,KAAK,GAAGX,MAAM,CAACY,OAAP,CAAeN,GAAG,CAACa,cAAnB,EAAmCL,IAAnC,CAAwC,UAACC,GAAD;AAAA,WAASA,GAAG,CAAC,CAAD,CAAH,KAAWL,MAApB;AAAA,GAAxC,CAAd;;AACA,MAAI,CAACC,KAAL,EAAY;AACR,UAAM,IAAIK,KAAJ,CAAU,wBAAV,CAAN;AACH;;AACD,MAAMC,GAAG,GAAGN,KAAK,CAAC,CAAD,CAAjB;;AACA,MAAI,CAACS,sBAAsB,CAACH,GAAD,CAA3B,EAAkC;AAC9B,UAAM,IAAID,KAAJ,WAAaC,GAAb,+BAAN;AACH;;AACD,SAAOT,QAAQ,CAACW,cAAT,CAAwBF,GAAxB,CAAP;AACH;;AACDf,OAAO,CAACE,aAAR,GAAwBA,aAAxB;AACA;;AACA,SAASc,sBAAT,CAAgCD,GAAhC,EAAqC;AACjC,SAAOR,QAAQ,CAACI,cAAT,CAAwBI,GAAxB,MAAiCI,SAAxC;AACH;;AACD,SAASD,sBAAT,CAAgCH,GAAhC,EAAqC;AACjC,SAAOT,QAAQ,CAACW,cAAT,CAAwBF,GAAxB,MAAiCI,SAAxC;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDevnetFarm = exports.getDevnetPool = void 0;\nconst __1 = require(\"..\");\nconst config_1 = require(\"./farms/config\");\nconst config_2 = require(\"./pools/config\");\nfunction getDevnetPool(config) {\n    const entry = Object.entries(__1.OrcaPoolConfig).find((arr) => arr[1] === config);\n    if (!entry) {\n        throw new Error(\"Invalid OrcaPoolConfig\");\n    }\n    const key = entry[0];\n    if (!isOrcaDevnetPoolConfig(key)) {\n        throw new Error(`${key} does not exist in devnet`);\n    }\n    return config_2.OrcaPoolConfig[key];\n}\nexports.getDevnetPool = getDevnetPool;\nfunction getDevnetFarm(config) {\n    const entry = Object.entries(__1.OrcaFarmConfig).find((arr) => arr[1] === config);\n    if (!entry) {\n        throw new Error(\"Invalid OrcaFarmConfig\");\n    }\n    const key = entry[0];\n    if (!isOrcaDevnetFarmConfig(key)) {\n        throw new Error(`${key} does not exist in devnet`);\n    }\n    return config_1.OrcaFarmConfig[key];\n}\nexports.getDevnetFarm = getDevnetFarm;\n/*** Type guards ***/\nfunction isOrcaDevnetPoolConfig(key) {\n    return config_2.OrcaPoolConfig[key] !== undefined;\n}\nfunction isOrcaDevnetFarmConfig(key) {\n    return config_1.OrcaFarmConfig[key] !== undefined;\n}\n"]},"metadata":{},"sourceType":"script"}