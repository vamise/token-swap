{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTypography;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nvar caseAllCaps = {\n  textTransform: 'uppercase'\n};\nvar defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */\n\nfunction createTypography(palette, typography) {\n  var _ref = typeof typography === 'function' ? typography(palette) : typography,\n      _ref$fontFamily = _ref.fontFamily,\n      fontFamily = _ref$fontFamily === void 0 ? defaultFontFamily : _ref$fontFamily,\n      _ref$fontSize = _ref.fontSize,\n      fontSize = _ref$fontSize === void 0 ? 14 : _ref$fontSize,\n      _ref$fontWeightLight = _ref.fontWeightLight,\n      fontWeightLight = _ref$fontWeightLight === void 0 ? 300 : _ref$fontWeightLight,\n      _ref$fontWeightRegula = _ref.fontWeightRegular,\n      fontWeightRegular = _ref$fontWeightRegula === void 0 ? 400 : _ref$fontWeightRegula,\n      _ref$fontWeightMedium = _ref.fontWeightMedium,\n      fontWeightMedium = _ref$fontWeightMedium === void 0 ? 500 : _ref$fontWeightMedium,\n      _ref$fontWeightBold = _ref.fontWeightBold,\n      fontWeightBold = _ref$fontWeightBold === void 0 ? 700 : _ref$fontWeightBold,\n      _ref$htmlFontSize = _ref.htmlFontSize,\n      htmlFontSize = _ref$htmlFontSize === void 0 ? 16 : _ref$htmlFontSize,\n      allVariants = _ref.allVariants,\n      pxToRem2 = _ref.pxToRem,\n      other = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n\n  var coef = fontSize / 14;\n\n  var pxToRem = pxToRem2 || function (size) {\n    return \"\".concat(size / htmlFontSize * coef, \"rem\");\n  };\n\n  var buildVariant = function buildVariant(fontWeight, size, lineHeight, letterSpacing, casing) {\n    return (0, _extends2.default)({\n      fontFamily: fontFamily,\n      fontWeight: fontWeight,\n      fontSize: pxToRem(size),\n      // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n      lineHeight: lineHeight\n    }, fontFamily === defaultFontFamily ? {\n      letterSpacing: \"\".concat(round(letterSpacing / size), \"em\")\n    } : {}, casing, allVariants);\n  };\n\n  var variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return (0, _utils.deepmerge)((0, _extends2.default)({\n    htmlFontSize: htmlFontSize,\n    pxToRem: pxToRem,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fontWeightLight: fontWeightLight,\n    fontWeightRegular: fontWeightRegular,\n    fontWeightMedium: fontWeightMedium,\n    fontWeightBold: fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n\n  });\n}","map":{"version":3,"sources":["/Users/mikovainio/FyFy/token-swap/node_modules/@mui/material/node/styles/createTypography.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","createTypography","_extends2","_objectWithoutPropertiesLoose2","_utils","_excluded","round","Math","caseAllCaps","textTransform","defaultFontFamily","palette","typography","_ref","fontFamily","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","htmlFontSize","allVariants","pxToRem2","pxToRem","other","process","env","NODE_ENV","console","error","coef","size","buildVariant","fontWeight","lineHeight","letterSpacing","casing","variants","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","deepmerge","clone"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTypography;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nconst _excluded = [\"fontFamily\", \"fontSize\", \"fontWeightLight\", \"fontWeightRegular\", \"fontWeightMedium\", \"fontWeightBold\", \"htmlFontSize\", \"allVariants\", \"pxToRem\"];\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst caseAllCaps = {\n  textTransform: 'uppercase'\n};\nconst defaultFontFamily = '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n/**\n * @see @link{https://material.io/design/typography/the-type-system.html}\n * @see @link{https://material.io/design/typography/understanding-typography.html}\n */\n\nfunction createTypography(palette, typography) {\n  const _ref = typeof typography === 'function' ? typography(palette) : typography,\n        {\n    fontFamily = defaultFontFamily,\n    // The default font size of the Material Specification.\n    fontSize = 14,\n    // px\n    fontWeightLight = 300,\n    fontWeightRegular = 400,\n    fontWeightMedium = 500,\n    fontWeightBold = 700,\n    // Tell MUI what's the font-size on the html element.\n    // 16px is the default font-size used by browsers.\n    htmlFontSize = 16,\n    // Apply the CSS properties to all the variants.\n    allVariants,\n    pxToRem: pxToRem2\n  } = _ref,\n        other = (0, _objectWithoutPropertiesLoose2.default)(_ref, _excluded);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof fontSize !== 'number') {\n      console.error('MUI: `fontSize` is required to be a number.');\n    }\n\n    if (typeof htmlFontSize !== 'number') {\n      console.error('MUI: `htmlFontSize` is required to be a number.');\n    }\n  }\n\n  const coef = fontSize / 14;\n\n  const pxToRem = pxToRem2 || (size => `${size / htmlFontSize * coef}rem`);\n\n  const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing) => (0, _extends2.default)({\n    fontFamily,\n    fontWeight,\n    fontSize: pxToRem(size),\n    // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/\n    lineHeight\n  }, fontFamily === defaultFontFamily ? {\n    letterSpacing: `${round(letterSpacing / size)}em`\n  } : {}, casing, allVariants);\n\n  const variants = {\n    h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),\n    h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),\n    h3: buildVariant(fontWeightRegular, 48, 1.167, 0),\n    h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),\n    h5: buildVariant(fontWeightRegular, 24, 1.334, 0),\n    h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),\n    subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),\n    subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),\n    body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),\n    body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),\n    button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),\n    caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),\n    overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps)\n  };\n  return (0, _utils.deepmerge)((0, _extends2.default)({\n    htmlFontSize,\n    pxToRem,\n    fontFamily,\n    fontSize,\n    fontWeightLight,\n    fontWeightRegular,\n    fontWeightMedium,\n    fontWeightBold\n  }, variants), other, {\n    clone: false // No need to clone deep\n\n  });\n}"]},"metadata":{},"sourceType":"script"}