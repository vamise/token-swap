{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\n\nvar _createClass = require(\"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/createClass.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar spl_token_1 = require(\"@solana/spl-token\");\n\nvar decimal_js_1 = __importDefault(require(\"decimal.js\"));\n\nvar __1 = require(\"..\");\n\nvar math_1 = require(\"../utils/math\");\n\nvar instructions_1 = require(\"../instructions\");\n\nvar Aquafarm = /*#__PURE__*/function () {\n  function Aquafarm(globalFarm, programId, userFarm) {\n    _classCallCheck(this, Aquafarm);\n\n    this.globalFarm = globalFarm;\n    this.programId = programId;\n    this.userFarm = userFarm;\n  }\n\n  _createClass(Aquafarm, [{\n    key: \"getEmissionsPer1000USDPerDay\",\n    value: function getEmissionsPer1000USDPerDay(totalLiquidity, rewardTokenDecimals) {\n      return new decimal_js_1.default(this.globalFarm.emissionsPerSecondNumerator.toString()).mul(60 * 60 * 24 * 1000).div(this.globalFarm.emissionsPerSecondDenominator.toString()).div(totalLiquidity).div(new decimal_js_1.default(10).pow(rewardTokenDecimals));\n    }\n  }, {\n    key: \"getWeeklyEmissions\",\n    value: function getWeeklyEmissions(rewardTokenDecimals) {\n      return new decimal_js_1.default(this.globalFarm.emissionsPerSecondNumerator.toString()).mul(60 * 60 * 24 * 7).div(this.globalFarm.emissionsPerSecondDenominator.toString()).div(new decimal_js_1.default(10).pow(rewardTokenDecimals));\n    }\n  }, {\n    key: \"getHarvestableAmount\",\n    value: function getHarvestableAmount() {\n      if (this.userFarm === null) {\n        return undefined;\n      } // h = numUserFarmTokens * (cumulativeEmissionsPerFarmToken - cumulativeEmissionsCheckpoint)\n\n\n      var cumulativeEmissionsDelta = this.globalFarm.cumulativeEmissionsPerFarmToken.sub(this.userFarm.cumulativeEmissionsCheckpoint);\n      return new spl_token_1.u64(new decimal_js_1.default(this.userFarm.baseTokensConverted.toString()).mul(cumulativeEmissionsDelta).floor().toString());\n    }\n  }, {\n    key: \"getCurrentHarvestableAmount\",\n    value: function getCurrentHarvestableAmount(totalFarmedAmount) {\n      var baseAmount = this.getHarvestableAmount();\n\n      if (!baseAmount || this.globalFarm.emissionsPerSecondDenominator.eq(math_1.ZERO) || totalFarmedAmount.eq(math_1.ZERO)) {\n        return baseAmount;\n      }\n\n      var elapsedTimeInSeconds = new spl_token_1.u64(Date.now() / 1000).sub(this.globalFarm.lastUpdatedTimestamp);\n      return this.globalFarm.emissionsPerSecondNumerator.mul(elapsedTimeInSeconds).mul(this.userFarm.baseTokensConverted).div(this.globalFarm.emissionsPerSecondDenominator).div(totalFarmedAmount).add(baseAmount);\n    }\n  }, {\n    key: \"isUserFarmInitialized\",\n    value: function isUserFarmInitialized() {\n      var _a;\n\n      return ((_a = this.userFarm) === null || _a === void 0 ? void 0 : _a.isInitialized) || false;\n    }\n  }, {\n    key: \"constructInitUserFarmIx\",\n    value: function constructInitUserFarmIx(owner, userFarmAddress) {\n      return instructions_1.constructInitUserFarmIx(this.globalFarm.publicKey, userFarmAddress, owner, this.programId);\n    }\n  }, {\n    key: \"constructConvertTokensIx\",\n    value: function constructConvertTokensIx(userTransferAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, amount, userFarmPublicKey, owner) {\n      var _a, _b;\n\n      var userFarmOwner = ((_a = this.userFarm) === null || _a === void 0 ? void 0 : _a.owner) || owner;\n      userFarmPublicKey = ((_b = this.userFarm) === null || _b === void 0 ? void 0 : _b.publicKey) || userFarmPublicKey;\n\n      if (!userFarmOwner || !userFarmPublicKey) {\n        return null;\n      }\n\n      return instructions_1.constructConvertTokensIx(userFarmOwner, userTransferAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, this.globalFarm.baseTokenVault, this.globalFarm.farmTokenMint, this.globalFarm.publicKey, userFarmPublicKey, this.globalFarm.rewardTokenVault, this.globalFarm.authority, this.programId, amount);\n    }\n  }, {\n    key: \"constructRevertTokensIx\",\n    value: function constructRevertTokensIx(userBurnAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, amount) {\n      if (!this.userFarm) {\n        return null;\n      }\n\n      return __1.constructRevertTokensIx(this.userFarm.owner, userBurnAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, this.globalFarm.baseTokenVault, this.globalFarm.farmTokenMint, this.globalFarm.publicKey, this.userFarm.publicKey, this.globalFarm.rewardTokenVault, this.globalFarm.authority, this.programId, amount);\n    }\n  }, {\n    key: \"constructHarvestIx\",\n    value: function constructHarvestIx(userRewardTokenAccountPubkey) {\n      if (!this.userFarm) {\n        return null;\n      }\n\n      return instructions_1.constructHarvestIx(this.userFarm.owner, userRewardTokenAccountPubkey, this.globalFarm.baseTokenVault, this.globalFarm.publicKey, this.userFarm.publicKey, this.globalFarm.rewardTokenVault, this.globalFarm.authority, this.programId);\n    }\n  }]);\n\n  return Aquafarm;\n}();\n\nexports.default = Aquafarm;","map":{"version":3,"sources":["../../src/models/Aquafarm.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst decimal_js_1 = __importDefault(require(\"decimal.js\"));\nconst __1 = require(\"..\");\nconst math_1 = require(\"../utils/math\");\nconst instructions_1 = require(\"../instructions\");\nclass Aquafarm {\n    constructor(globalFarm, programId, userFarm) {\n        this.globalFarm = globalFarm;\n        this.programId = programId;\n        this.userFarm = userFarm;\n    }\n    getEmissionsPer1000USDPerDay(totalLiquidity, rewardTokenDecimals) {\n        return new decimal_js_1.default(this.globalFarm.emissionsPerSecondNumerator.toString())\n            .mul(60 * 60 * 24 * 1000)\n            .div(this.globalFarm.emissionsPerSecondDenominator.toString())\n            .div(totalLiquidity)\n            .div(new decimal_js_1.default(10).pow(rewardTokenDecimals));\n    }\n    getWeeklyEmissions(rewardTokenDecimals) {\n        return new decimal_js_1.default(this.globalFarm.emissionsPerSecondNumerator.toString())\n            .mul(60 * 60 * 24 * 7)\n            .div(this.globalFarm.emissionsPerSecondDenominator.toString())\n            .div(new decimal_js_1.default(10).pow(rewardTokenDecimals));\n    }\n    getHarvestableAmount() {\n        if (this.userFarm === null) {\n            return undefined;\n        }\n        // h = numUserFarmTokens * (cumulativeEmissionsPerFarmToken - cumulativeEmissionsCheckpoint)\n        const cumulativeEmissionsDelta = this.globalFarm.cumulativeEmissionsPerFarmToken.sub(this.userFarm.cumulativeEmissionsCheckpoint);\n        return new spl_token_1.u64(new decimal_js_1.default(this.userFarm.baseTokensConverted.toString())\n            .mul(cumulativeEmissionsDelta)\n            .floor()\n            .toString());\n    }\n    getCurrentHarvestableAmount(totalFarmedAmount) {\n        const baseAmount = this.getHarvestableAmount();\n        if (!baseAmount ||\n            this.globalFarm.emissionsPerSecondDenominator.eq(math_1.ZERO) ||\n            totalFarmedAmount.eq(math_1.ZERO)) {\n            return baseAmount;\n        }\n        const elapsedTimeInSeconds = new spl_token_1.u64(Date.now() / 1000).sub(this.globalFarm.lastUpdatedTimestamp);\n        return this.globalFarm.emissionsPerSecondNumerator\n            .mul(elapsedTimeInSeconds)\n            .mul(this.userFarm.baseTokensConverted)\n            .div(this.globalFarm.emissionsPerSecondDenominator)\n            .div(totalFarmedAmount)\n            .add(baseAmount);\n    }\n    isUserFarmInitialized() {\n        var _a;\n        return ((_a = this.userFarm) === null || _a === void 0 ? void 0 : _a.isInitialized) || false;\n    }\n    constructInitUserFarmIx(owner, userFarmAddress) {\n        return instructions_1.constructInitUserFarmIx(this.globalFarm.publicKey, userFarmAddress, owner, this.programId);\n    }\n    constructConvertTokensIx(userTransferAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, amount, userFarmPublicKey, owner) {\n        var _a, _b;\n        const userFarmOwner = ((_a = this.userFarm) === null || _a === void 0 ? void 0 : _a.owner) || owner;\n        userFarmPublicKey = ((_b = this.userFarm) === null || _b === void 0 ? void 0 : _b.publicKey) || userFarmPublicKey;\n        if (!userFarmOwner || !userFarmPublicKey) {\n            return null;\n        }\n        return instructions_1.constructConvertTokensIx(userFarmOwner, userTransferAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, this.globalFarm.baseTokenVault, this.globalFarm.farmTokenMint, this.globalFarm.publicKey, userFarmPublicKey, this.globalFarm.rewardTokenVault, this.globalFarm.authority, this.programId, amount);\n    }\n    constructRevertTokensIx(userBurnAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, amount) {\n        if (!this.userFarm) {\n            return null;\n        }\n        return __1.constructRevertTokensIx(this.userFarm.owner, userBurnAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, this.globalFarm.baseTokenVault, this.globalFarm.farmTokenMint, this.globalFarm.publicKey, this.userFarm.publicKey, this.globalFarm.rewardTokenVault, this.globalFarm.authority, this.programId, amount);\n    }\n    constructHarvestIx(userRewardTokenAccountPubkey) {\n        if (!this.userFarm) {\n            return null;\n        }\n        return instructions_1.constructHarvestIx(this.userFarm.owner, userRewardTokenAccountPubkey, this.globalFarm.baseTokenVault, this.globalFarm.publicKey, this.userFarm.publicKey, this.globalFarm.rewardTokenVault, this.globalFarm.authority, this.programId);\n    }\n}\nexports.default = Aquafarm;\n//# sourceMappingURL=Aquafarm.js.map"]},"metadata":{},"sourceType":"script"}