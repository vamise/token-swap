{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.constructRemoveRewardsIx = exports.constructSetEmissionsPerSecondIx = exports.constructHarvestIx = exports.constructRevertTokensIx = exports.constructConvertTokensIx = exports.constructInitUserFarmIx = exports.constructInitGlobalFarmIx = exports.INSTRUCTIONS = void 0;\n\nvar spl_token_1 = require(\"@solana/spl-token\");\n\nvar web3_js_1 = require(\"@solana/web3.js\");\n\nvar layout_1 = require(\"./utils/layout\");\n\nvar buffer_layout_1 = __importDefault(require(\"buffer-layout\"));\n\nvar INSTRUCTIONS;\n\n(function (INSTRUCTIONS) {\n  INSTRUCTIONS[INSTRUCTIONS[\"InitGlobalFarm\"] = 0] = \"InitGlobalFarm\";\n  INSTRUCTIONS[INSTRUCTIONS[\"InitUserFarm\"] = 1] = \"InitUserFarm\";\n  INSTRUCTIONS[INSTRUCTIONS[\"ConvertTokens\"] = 2] = \"ConvertTokens\";\n  INSTRUCTIONS[INSTRUCTIONS[\"RevertTokens\"] = 3] = \"RevertTokens\";\n  INSTRUCTIONS[INSTRUCTIONS[\"Harvest\"] = 4] = \"Harvest\";\n  INSTRUCTIONS[INSTRUCTIONS[\"RemoveRewards\"] = 5] = \"RemoveRewards\";\n  INSTRUCTIONS[INSTRUCTIONS[\"SetEmissionsPerSecond\"] = 6] = \"SetEmissionsPerSecond\";\n})(INSTRUCTIONS = exports.INSTRUCTIONS || (exports.INSTRUCTIONS = {}));\n\nfunction constructInitGlobalFarmIx(globalFarmStatePubkey, baseTokenMintPubkey, globalBaseTokenVaultPubkey, rewardTokenVaultPubkey, farmTokenMintPubkey, emissionsAuthorityPubkey, removeRewardsAuthorityPubkey, emissionsPerSecondNumerator, emissionsPerSecondDenominator, nonce, aquafarmProgramId, funderPubkey) {\n  var keys = [{\n    pubkey: baseTokenMintPubkey,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: globalBaseTokenVaultPubkey,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: rewardTokenVaultPubkey,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: farmTokenMintPubkey,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: globalFarmStatePubkey,\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: funderPubkey,\n    isSigner: true,\n    isWritable: false\n  }, {\n    pubkey: web3_js_1.SystemProgram.programId,\n    isSigner: false,\n    isWritable: false\n  }];\n  return new web3_js_1.TransactionInstruction({\n    keys: keys,\n    programId: aquafarmProgramId,\n    data: layout_1.generateBufferData(layout_1.INIT_GLOBAL_FARM_DATA_LAYOUT, {\n      instruction: INSTRUCTIONS.InitGlobalFarm,\n      nonce: nonce,\n      tokenProgramId: spl_token_1.TOKEN_PROGRAM_ID.toBuffer(),\n      emissionsAuthority: emissionsAuthorityPubkey.toBuffer(),\n      removeRewardsAuthority: removeRewardsAuthorityPubkey.toBuffer(),\n      emissionsPerSecondNumerator: emissionsPerSecondNumerator.toBuffer(),\n      emissionsPerSecondDenominator: emissionsPerSecondDenominator.toBuffer()\n    })\n  });\n}\n\nexports.constructInitGlobalFarmIx = constructInitGlobalFarmIx;\n\nfunction constructInitUserFarmIx(globalFarmStatePubkey, userFarmStatePubkey, ownerPubkey, aquafarmProgramId) {\n  var keys = [{\n    pubkey: globalFarmStatePubkey,\n    isSigner: false,\n    isWritable: false\n  }, {\n    pubkey: userFarmStatePubkey,\n    isSigner: false,\n    isWritable: true\n  }, {\n    pubkey: ownerPubkey,\n    isSigner: true,\n    isWritable: false\n  }, {\n    pubkey: web3_js_1.SystemProgram.programId,\n    isSigner: false,\n    isWritable: false\n  }];\n  return new web3_js_1.TransactionInstruction({\n    keys: keys,\n    programId: aquafarmProgramId,\n    data: layout_1.generateBufferData(layout_1.INIT_USER_FARM_DATA_LAYOUT, {\n      instruction: INSTRUCTIONS.InitUserFarm\n    }) // Initialize user farm instruction\n\n  });\n}\n\nexports.constructInitUserFarmIx = constructInitUserFarmIx;\n\nfunction constructConvertTokensIx(userFarmOwner, userTransferAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, globalBaseTokenVaultPubkey, farmTokenMintPubkey, globalFarm, userFarm, globalRewardTokenVaultPubkey, authority, aquafarmProgramId, amountToConvert) {\n  return new web3_js_1.TransactionInstruction({\n    keys: [{\n      pubkey: userFarmOwner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: userBaseTokenAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: globalBaseTokenVaultPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userTransferAuthority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: farmTokenMintPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userFarmTokenAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: globalFarm,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userFarm,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: globalRewardTokenVaultPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userRewardTokenAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authority,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }],\n    programId: aquafarmProgramId,\n    data: layout_1.generateBufferData(buffer_layout_1.default.struct([buffer_layout_1.default.u8(\"instruction\"), layout_1.uint64(\"amountToConvert\")]), {\n      instruction: INSTRUCTIONS.ConvertTokens,\n      amountToConvert: amountToConvert.toBuffer() // The time period over which to distribute: 2 weeks\n\n    })\n  });\n}\n\nexports.constructConvertTokensIx = constructConvertTokensIx;\n\nfunction constructRevertTokensIx(userFarmOwner, userBurnAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, globalBaseTokenVaultPubkey, farmTokenMintPubkey, globalFarm, userFarm, globalRewardTokenVaultPubkey, authority, aquafarmProgramId, amountToRevert) {\n  return new web3_js_1.TransactionInstruction({\n    keys: [{\n      pubkey: userFarmOwner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: userBaseTokenAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: globalBaseTokenVaultPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: farmTokenMintPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userFarmTokenAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userBurnAuthority,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: globalFarm,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userFarm,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: globalRewardTokenVaultPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userRewardTokenAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authority,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }],\n    programId: aquafarmProgramId,\n    data: layout_1.generateBufferData(buffer_layout_1.default.struct([buffer_layout_1.default.u8(\"instruction\"), layout_1.uint64(\"amountToRevert\")]), {\n      instruction: INSTRUCTIONS.RevertTokens,\n      amountToRevert: amountToRevert.toBuffer()\n    })\n  });\n}\n\nexports.constructRevertTokensIx = constructRevertTokensIx;\n\nfunction constructHarvestIx(userFarmOwner, userRewardTokenAccountPubkey, globalBaseTokenVaultPubkey, globalFarm, userFarm, globalRewardTokenVaultPubkey, authority, aquafarmProgramId) {\n  return new web3_js_1.TransactionInstruction({\n    keys: [{\n      pubkey: userFarmOwner,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: globalFarm,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userFarm,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: globalBaseTokenVaultPubkey,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: globalRewardTokenVaultPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: userRewardTokenAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authority,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }],\n    programId: aquafarmProgramId,\n    data: layout_1.generateBufferData(buffer_layout_1.default.struct([buffer_layout_1.default.u8(\"instruction\")]), {\n      instruction: INSTRUCTIONS.Harvest\n    })\n  });\n}\n\nexports.constructHarvestIx = constructHarvestIx;\n\nfunction constructSetEmissionsPerSecondIx(emissionsAuthorityPubkey, globalFarmStatePubkey, globalBaseTokenVaultKey, aquafarmProgramId, numerator, denominator) {\n  return new web3_js_1.TransactionInstruction({\n    keys: [{\n      pubkey: emissionsAuthorityPubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: globalFarmStatePubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: globalBaseTokenVaultKey,\n      isSigner: false,\n      isWritable: false\n    }],\n    programId: aquafarmProgramId,\n    data: layout_1.generateBufferData(buffer_layout_1.default.struct([buffer_layout_1.default.u8(\"instruction\"), layout_1.uint64(\"emissionsPerSecondNumerator\"), layout_1.uint64(\"emissionsPerSecondDenominator\")]), {\n      instruction: INSTRUCTIONS.SetEmissionsPerSecond,\n      emissionsPerSecondNumerator: layout_1.u64ToBuffer(numerator),\n      emissionsPerSecondDenominator: layout_1.u64ToBuffer(denominator)\n    })\n  });\n}\n\nexports.constructSetEmissionsPerSecondIx = constructSetEmissionsPerSecondIx;\n\nfunction constructRemoveRewardsIx(globalFarmStatePubkey, removeRewardsAuthorityPubkey, destRewardTokenAccountPubkey, globalRewardTokenVaultPubkey, authority, aquafarmProgramId, amountToConvert) {\n  return new web3_js_1.TransactionInstruction({\n    keys: [{\n      pubkey: globalFarmStatePubkey,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: removeRewardsAuthorityPubkey,\n      isSigner: true,\n      isWritable: false\n    }, {\n      pubkey: destRewardTokenAccountPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: globalRewardTokenVaultPubkey,\n      isSigner: false,\n      isWritable: true\n    }, {\n      pubkey: authority,\n      isSigner: false,\n      isWritable: false\n    }, {\n      pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false\n    }],\n    programId: aquafarmProgramId,\n    data: layout_1.generateBufferData(buffer_layout_1.default.struct([buffer_layout_1.default.u8(\"instruction\"), layout_1.uint64(\"amountToRemove\")]), {\n      instruction: INSTRUCTIONS.RemoveRewards,\n      amountToRemove: amountToConvert.toBuffer() // The time period over which to distribute: 2 weeks\n\n    })\n  });\n}\n\nexports.constructRemoveRewardsIx = constructRemoveRewardsIx;","map":{"version":3,"sources":["../src/instructions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constructRemoveRewardsIx = exports.constructSetEmissionsPerSecondIx = exports.constructHarvestIx = exports.constructRevertTokensIx = exports.constructConvertTokensIx = exports.constructInitUserFarmIx = exports.constructInitGlobalFarmIx = exports.INSTRUCTIONS = void 0;\nconst spl_token_1 = require(\"@solana/spl-token\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst layout_1 = require(\"./utils/layout\");\nconst buffer_layout_1 = __importDefault(require(\"buffer-layout\"));\nvar INSTRUCTIONS;\n(function (INSTRUCTIONS) {\n    INSTRUCTIONS[INSTRUCTIONS[\"InitGlobalFarm\"] = 0] = \"InitGlobalFarm\";\n    INSTRUCTIONS[INSTRUCTIONS[\"InitUserFarm\"] = 1] = \"InitUserFarm\";\n    INSTRUCTIONS[INSTRUCTIONS[\"ConvertTokens\"] = 2] = \"ConvertTokens\";\n    INSTRUCTIONS[INSTRUCTIONS[\"RevertTokens\"] = 3] = \"RevertTokens\";\n    INSTRUCTIONS[INSTRUCTIONS[\"Harvest\"] = 4] = \"Harvest\";\n    INSTRUCTIONS[INSTRUCTIONS[\"RemoveRewards\"] = 5] = \"RemoveRewards\";\n    INSTRUCTIONS[INSTRUCTIONS[\"SetEmissionsPerSecond\"] = 6] = \"SetEmissionsPerSecond\";\n})(INSTRUCTIONS = exports.INSTRUCTIONS || (exports.INSTRUCTIONS = {}));\nfunction constructInitGlobalFarmIx(globalFarmStatePubkey, baseTokenMintPubkey, globalBaseTokenVaultPubkey, rewardTokenVaultPubkey, farmTokenMintPubkey, emissionsAuthorityPubkey, removeRewardsAuthorityPubkey, emissionsPerSecondNumerator, emissionsPerSecondDenominator, nonce, aquafarmProgramId, funderPubkey) {\n    const keys = [\n        { pubkey: baseTokenMintPubkey, isSigner: false, isWritable: false },\n        {\n            pubkey: globalBaseTokenVaultPubkey,\n            isSigner: false,\n            isWritable: false,\n        },\n        { pubkey: rewardTokenVaultPubkey, isSigner: false, isWritable: false },\n        { pubkey: farmTokenMintPubkey, isSigner: false, isWritable: false },\n        { pubkey: globalFarmStatePubkey, isSigner: false, isWritable: true },\n        { pubkey: funderPubkey, isSigner: true, isWritable: false },\n        { pubkey: web3_js_1.SystemProgram.programId, isSigner: false, isWritable: false },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        programId: aquafarmProgramId,\n        data: layout_1.generateBufferData(layout_1.INIT_GLOBAL_FARM_DATA_LAYOUT, {\n            instruction: INSTRUCTIONS.InitGlobalFarm,\n            nonce,\n            tokenProgramId: spl_token_1.TOKEN_PROGRAM_ID.toBuffer(),\n            emissionsAuthority: emissionsAuthorityPubkey.toBuffer(),\n            removeRewardsAuthority: removeRewardsAuthorityPubkey.toBuffer(),\n            emissionsPerSecondNumerator: emissionsPerSecondNumerator.toBuffer(),\n            emissionsPerSecondDenominator: emissionsPerSecondDenominator.toBuffer(),\n        }),\n    });\n}\nexports.constructInitGlobalFarmIx = constructInitGlobalFarmIx;\nfunction constructInitUserFarmIx(globalFarmStatePubkey, userFarmStatePubkey, ownerPubkey, aquafarmProgramId) {\n    const keys = [\n        {\n            pubkey: globalFarmStatePubkey,\n            isSigner: false,\n            isWritable: false,\n        },\n        {\n            pubkey: userFarmStatePubkey,\n            isSigner: false,\n            isWritable: true,\n        },\n        {\n            pubkey: ownerPubkey,\n            isSigner: true,\n            isWritable: false,\n        },\n        {\n            pubkey: web3_js_1.SystemProgram.programId,\n            isSigner: false,\n            isWritable: false,\n        },\n    ];\n    return new web3_js_1.TransactionInstruction({\n        keys,\n        programId: aquafarmProgramId,\n        data: layout_1.generateBufferData(layout_1.INIT_USER_FARM_DATA_LAYOUT, {\n            instruction: INSTRUCTIONS.InitUserFarm,\n        }), // Initialize user farm instruction\n    });\n}\nexports.constructInitUserFarmIx = constructInitUserFarmIx;\nfunction constructConvertTokensIx(userFarmOwner, userTransferAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, globalBaseTokenVaultPubkey, farmTokenMintPubkey, globalFarm, userFarm, globalRewardTokenVaultPubkey, authority, aquafarmProgramId, amountToConvert) {\n    return new web3_js_1.TransactionInstruction({\n        keys: [\n            {\n                pubkey: userFarmOwner,\n                isSigner: true,\n                isWritable: false,\n            },\n            {\n                pubkey: userBaseTokenAccountPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: globalBaseTokenVaultPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userTransferAuthority,\n                isSigner: true,\n                isWritable: false,\n            },\n            {\n                pubkey: farmTokenMintPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userFarmTokenAccountPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: globalFarm,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userFarm,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: globalRewardTokenVaultPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userRewardTokenAccountPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: authority,\n                isSigner: false,\n                isWritable: false,\n            },\n            {\n                pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                isSigner: false,\n                isWritable: false,\n            },\n        ],\n        programId: aquafarmProgramId,\n        data: layout_1.generateBufferData(buffer_layout_1.default.struct([\n            buffer_layout_1.default.u8(\"instruction\"),\n            layout_1.uint64(\"amountToConvert\"),\n        ]), {\n            instruction: INSTRUCTIONS.ConvertTokens,\n            amountToConvert: amountToConvert.toBuffer(), // The time period over which to distribute: 2 weeks\n        }),\n    });\n}\nexports.constructConvertTokensIx = constructConvertTokensIx;\nfunction constructRevertTokensIx(userFarmOwner, userBurnAuthority, userBaseTokenAccountPubkey, userFarmTokenAccountPubkey, userRewardTokenAccountPubkey, globalBaseTokenVaultPubkey, farmTokenMintPubkey, globalFarm, userFarm, globalRewardTokenVaultPubkey, authority, aquafarmProgramId, amountToRevert) {\n    return new web3_js_1.TransactionInstruction({\n        keys: [\n            {\n                pubkey: userFarmOwner,\n                isSigner: true,\n                isWritable: false,\n            },\n            {\n                pubkey: userBaseTokenAccountPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: globalBaseTokenVaultPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: farmTokenMintPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userFarmTokenAccountPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userBurnAuthority,\n                isSigner: true,\n                isWritable: false,\n            },\n            {\n                pubkey: globalFarm,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userFarm,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: globalRewardTokenVaultPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userRewardTokenAccountPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: authority,\n                isSigner: false,\n                isWritable: false,\n            },\n            {\n                pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                isSigner: false,\n                isWritable: false,\n            },\n        ],\n        programId: aquafarmProgramId,\n        data: layout_1.generateBufferData(buffer_layout_1.default.struct([\n            buffer_layout_1.default.u8(\"instruction\"),\n            layout_1.uint64(\"amountToRevert\"),\n        ]), {\n            instruction: INSTRUCTIONS.RevertTokens,\n            amountToRevert: amountToRevert.toBuffer(),\n        }),\n    });\n}\nexports.constructRevertTokensIx = constructRevertTokensIx;\nfunction constructHarvestIx(userFarmOwner, userRewardTokenAccountPubkey, globalBaseTokenVaultPubkey, globalFarm, userFarm, globalRewardTokenVaultPubkey, authority, aquafarmProgramId) {\n    return new web3_js_1.TransactionInstruction({\n        keys: [\n            {\n                pubkey: userFarmOwner,\n                isSigner: true,\n                isWritable: false,\n            },\n            {\n                pubkey: globalFarm,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userFarm,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: globalBaseTokenVaultPubkey,\n                isSigner: false,\n                isWritable: false,\n            },\n            {\n                pubkey: globalRewardTokenVaultPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: userRewardTokenAccountPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: authority,\n                isSigner: false,\n                isWritable: false,\n            },\n            {\n                pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                isSigner: false,\n                isWritable: false,\n            },\n        ],\n        programId: aquafarmProgramId,\n        data: layout_1.generateBufferData(buffer_layout_1.default.struct([buffer_layout_1.default.u8(\"instruction\")]), {\n            instruction: INSTRUCTIONS.Harvest,\n        }),\n    });\n}\nexports.constructHarvestIx = constructHarvestIx;\nfunction constructSetEmissionsPerSecondIx(emissionsAuthorityPubkey, globalFarmStatePubkey, globalBaseTokenVaultKey, aquafarmProgramId, numerator, denominator) {\n    return new web3_js_1.TransactionInstruction({\n        keys: [\n            {\n                pubkey: emissionsAuthorityPubkey,\n                isSigner: true,\n                isWritable: false,\n            },\n            {\n                pubkey: globalFarmStatePubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: globalBaseTokenVaultKey,\n                isSigner: false,\n                isWritable: false,\n            },\n        ],\n        programId: aquafarmProgramId,\n        data: layout_1.generateBufferData(buffer_layout_1.default.struct([\n            buffer_layout_1.default.u8(\"instruction\"),\n            layout_1.uint64(\"emissionsPerSecondNumerator\"),\n            layout_1.uint64(\"emissionsPerSecondDenominator\"),\n        ]), {\n            instruction: INSTRUCTIONS.SetEmissionsPerSecond,\n            emissionsPerSecondNumerator: layout_1.u64ToBuffer(numerator),\n            emissionsPerSecondDenominator: layout_1.u64ToBuffer(denominator),\n        }),\n    });\n}\nexports.constructSetEmissionsPerSecondIx = constructSetEmissionsPerSecondIx;\nfunction constructRemoveRewardsIx(globalFarmStatePubkey, removeRewardsAuthorityPubkey, destRewardTokenAccountPubkey, globalRewardTokenVaultPubkey, authority, aquafarmProgramId, amountToConvert) {\n    return new web3_js_1.TransactionInstruction({\n        keys: [\n            {\n                pubkey: globalFarmStatePubkey,\n                isSigner: false,\n                isWritable: false,\n            },\n            {\n                pubkey: removeRewardsAuthorityPubkey,\n                isSigner: true,\n                isWritable: false,\n            },\n            {\n                pubkey: destRewardTokenAccountPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: globalRewardTokenVaultPubkey,\n                isSigner: false,\n                isWritable: true,\n            },\n            {\n                pubkey: authority,\n                isSigner: false,\n                isWritable: false,\n            },\n            {\n                pubkey: spl_token_1.TOKEN_PROGRAM_ID,\n                isSigner: false,\n                isWritable: false,\n            },\n        ],\n        programId: aquafarmProgramId,\n        data: layout_1.generateBufferData(buffer_layout_1.default.struct([\n            buffer_layout_1.default.u8(\"instruction\"),\n            layout_1.uint64(\"amountToRemove\"),\n        ]), {\n            instruction: INSTRUCTIONS.RemoveRewards,\n            amountToRemove: amountToConvert.toBuffer(), // The time period over which to distribute: 2 weeks\n        }),\n    });\n}\nexports.constructRemoveRewardsIx = constructRemoveRewardsIx;\n//# sourceMappingURL=instructions.js.map"]},"metadata":{},"sourceType":"script"}