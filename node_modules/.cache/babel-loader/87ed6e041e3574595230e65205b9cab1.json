{"ast":null,"code":"import _objectSpread from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/mikovainio/FyFy/token-swap/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"color\", \"variant\", \"type\", \"children\", \"disabled\", \"onClick\"];\nimport { Button } from '@mui/material';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { WalletIcon } from './WalletIcon.mjs';\nexport var WalletConnectButton = function WalletConnectButton(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'primary' : _ref$color,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? 'contained' : _ref$variant,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      children = _ref.children,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useWallet = useWallet(),\n      wallet = _useWallet.wallet,\n      connect = _useWallet.connect,\n      connecting = _useWallet.connecting,\n      connected = _useWallet.connected;\n\n  var handleClick = useCallback(function (event) {\n    if (onClick) onClick(event); // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n    if (!event.defaultPrevented) connect().catch(function () {// Silently catch because any errors are caught by the context `onError` handler\n    });\n  }, [onClick, connect]);\n  var content = useMemo(function () {\n    if (children) return children;\n    if (connecting) return 'Connecting ...';\n    if (connected) return 'Connected';\n    if (wallet) return 'Connect';\n    return 'Connect Wallet';\n  }, [children, connecting, connected, wallet]);\n  return React.createElement(Button, _objectSpread({\n    color: color,\n    variant: variant,\n    type: type,\n    onClick: handleClick,\n    disabled: disabled || !wallet || connecting || connected,\n    startIcon: React.createElement(WalletIcon, {\n      wallet: wallet\n    })\n  }, props), content);\n};","map":{"version":3,"sources":["../../src/WalletConnectButton.tsx"],"names":[],"mappings":";;;AAAA,SAAS,MAAT,QAAoC,eAApC;AACA,SAAS,SAAT,QAA0B,8BAA1B;AACA,OAAO,KAAP,IAAuC,WAAvC,EAAoD,OAApD,QAAmE,OAAnE;AACA,SAAS,UAAT,QAA2B,kBAA3B;AAEA,OAAO,IAAM,mBAAmB,GAAoB,SAAvC,mBAAuC,OAQ/C;AAAA,wBAPD,KAOC;AAAA,MAPD,KAOC,2BAPO,SAOP;AAAA,0BAND,OAMC;AAAA,MAND,OAMC,6BANS,WAMT;AAAA,uBALD,IAKC;AAAA,MALD,IAKC,0BALM,QAKN;AAAA,MAJD,QAIC,QAJD,QAIC;AAAA,MAHD,QAGC,QAHD,QAGC;AAAA,MAFD,OAEC,QAFD,OAEC;AAAA,MADE,KACF;;AACD,mBAAmD,SAAS,EAA5D;AAAA,MAAQ,MAAR,cAAQ,MAAR;AAAA,MAAgB,OAAhB,cAAgB,OAAhB;AAAA,MAAyB,UAAzB,cAAyB,UAAzB;AAAA,MAAqC,SAArC,cAAqC,SAArC;;AAEA,MAAM,WAAW,GAAyC,WAAW,CACjE,UAAC,KAAD,EAAU;AACN,QAAI,OAAJ,EAAa,OAAO,CAAC,KAAD,CAAP,CADP,CAEN;;AACA,QAAI,CAAC,KAAK,CAAC,gBAAX,EACI,OAAO,GAAG,KAAV,CAAgB,YAAK,CACjB;AACH,KAFD;AAGP,GARgE,EASjE,CAAC,OAAD,EAAU,OAAV,CATiE,CAArE;AAYA,MAAM,OAAO,GAAG,OAAO,CAAC,YAAK;AACzB,QAAI,QAAJ,EAAc,OAAO,QAAP;AACd,QAAI,UAAJ,EAAgB,OAAO,gBAAP;AAChB,QAAI,SAAJ,EAAe,OAAO,WAAP;AACf,QAAI,MAAJ,EAAY,OAAO,SAAP;AACZ,WAAO,gBAAP;AACH,GANsB,EAMpB,CAAC,QAAD,EAAW,UAAX,EAAuB,SAAvB,EAAkC,MAAlC,CANoB,CAAvB;AAQA,SACI,KAAA,CAAA,aAAA,CAAC,MAAD;AACI,IAAA,KAAK,EAAE,KADX;AAEI,IAAA,OAAO,EAAE,OAFb;AAGI,IAAA,IAAI,EAAE,IAHV;AAII,IAAA,OAAO,EAAE,WAJb;AAKI,IAAA,QAAQ,EAAE,QAAQ,IAAI,CAAC,MAAb,IAAuB,UAAvB,IAAqC,SALnD;AAMI,IAAA,SAAS,EAAE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,MAAA,MAAM,EAAE;AAAT,KAAX;AANf,KAOQ,KAPR,GASK,OATL,CADJ;AAaH,CA5CM","sourceRoot":"","sourcesContent":["import { Button } from '@mui/material';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport React, { useCallback, useMemo } from 'react';\nimport { WalletIcon } from './WalletIcon.mjs';\nexport const WalletConnectButton = ({ color = 'primary', variant = 'contained', type = 'button', children, disabled, onClick, ...props }) => {\n    const { wallet, connect, connecting, connected } = useWallet();\n    const handleClick = useCallback((event) => {\n        if (onClick)\n            onClick(event);\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        if (!event.defaultPrevented)\n            connect().catch(() => {\n                // Silently catch because any errors are caught by the context `onError` handler\n            });\n    }, [onClick, connect]);\n    const content = useMemo(() => {\n        if (children)\n            return children;\n        if (connecting)\n            return 'Connecting ...';\n        if (connected)\n            return 'Connected';\n        if (wallet)\n            return 'Connect';\n        return 'Connect Wallet';\n    }, [children, connecting, connected, wallet]);\n    return (React.createElement(Button, { color: color, variant: variant, type: type, onClick: handleClick, disabled: disabled || !wallet || connecting || connected, startIcon: React.createElement(WalletIcon, { wallet: wallet }), ...props }, content));\n};\n//# sourceMappingURL=WalletConnectButton.js.map"]},"metadata":{},"sourceType":"module"}