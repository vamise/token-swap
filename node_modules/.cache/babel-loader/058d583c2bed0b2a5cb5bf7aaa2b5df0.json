{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTransitions;\nexports.easing = exports.duration = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _excluded = [\"duration\", \"easing\", \"delay\"]; // Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\n\nvar easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nexports.easing = easing;\nvar duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nexports.duration = duration;\n\nfunction formatMs(milliseconds) {\n  return \"\".concat(Math.round(milliseconds), \"ms\");\n}\n\nfunction getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n\n  var constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n\n  return Math.round((4 + 15 * Math.pow(constant, 0.25) + constant / 5) * 10);\n}\n\nfunction createTransitions(inputTransitions) {\n  var mergedEasing = (0, _extends2.default)({}, easing, inputTransitions.easing);\n  var mergedDuration = (0, _extends2.default)({}, duration, inputTransitions.duration);\n\n  var create = function create() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$duration = options.duration,\n        durationOption = _options$duration === void 0 ? mergedDuration.standard : _options$duration,\n        _options$easing = options.easing,\n        easingOption = _options$easing === void 0 ? mergedEasing.easeInOut : _options$easing,\n        _options$delay = options.delay,\n        delay = _options$delay === void 0 ? 0 : _options$delay,\n        other = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\n\n    if (process.env.NODE_ENV !== 'production') {\n      var isString = function isString(value) {\n        return typeof value === 'string';\n      }; // IE11 support, replace with Number.isNaN\n      // eslint-disable-next-line no-restricted-globals\n\n\n      var isNumber = function isNumber(value) {\n        return !isNaN(parseFloat(value));\n      };\n\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('MUI: Argument \"props\" must be a string or Array.');\n      }\n\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(\"MUI: Argument \\\"duration\\\" must be a number or a string but found \".concat(durationOption, \".\"));\n      }\n\n      if (!isString(easingOption)) {\n        console.error('MUI: Argument \"easing\" must be a string.');\n      }\n\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('MUI: Argument \"delay\" must be a number or a string.');\n      }\n\n      if (Object.keys(other).length !== 0) {\n        console.error(\"MUI: Unrecognized argument(s) [\".concat(Object.keys(other).join(','), \"].\"));\n      }\n    }\n\n    return (Array.isArray(props) ? props : [props]).map(function (animatedProp) {\n      return \"\".concat(animatedProp, \" \").concat(typeof durationOption === 'string' ? durationOption : formatMs(durationOption), \" \").concat(easingOption, \" \").concat(typeof delay === 'string' ? delay : formatMs(delay));\n    }).join(',');\n  };\n\n  return (0, _extends2.default)({\n    getAutoHeightDuration: getAutoHeightDuration,\n    create: create\n  }, inputTransitions, {\n    easing: mergedEasing,\n    duration: mergedDuration\n  });\n}","map":{"version":3,"sources":["/Users/mikovainio/FyFy/token-swap/node_modules/@mui/material/node/styles/createTransitions.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","createTransitions","easing","duration","_objectWithoutPropertiesLoose2","_extends2","_excluded","easeInOut","easeOut","easeIn","sharp","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","formatMs","milliseconds","Math","round","getAutoHeightDuration","height","constant","inputTransitions","mergedEasing","mergedDuration","create","props","options","durationOption","easingOption","delay","other","process","env","NODE_ENV","isString","isNumber","isNaN","parseFloat","Array","isArray","console","error","keys","length","join","map","animatedProp"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTransitions;\nexports.easing = exports.duration = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nconst _excluded = [\"duration\", \"easing\", \"delay\"];\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nconst easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nexports.easing = easing;\nconst duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nexports.duration = duration;\n\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\n\nfunction getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n\n  const constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n\nfunction createTransitions(inputTransitions) {\n  const mergedEasing = (0, _extends2.default)({}, easing, inputTransitions.easing);\n  const mergedDuration = (0, _extends2.default)({}, duration, inputTransitions.duration);\n\n  const create = (props = ['all'], options = {}) => {\n    const {\n      duration: durationOption = mergedDuration.standard,\n      easing: easingOption = mergedEasing.easeInOut,\n      delay = 0\n    } = options,\n          other = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\n\n    if (process.env.NODE_ENV !== 'production') {\n      const isString = value => typeof value === 'string'; // IE11 support, replace with Number.isNaN\n      // eslint-disable-next-line no-restricted-globals\n\n\n      const isNumber = value => !isNaN(parseFloat(value));\n\n      if (!isString(props) && !Array.isArray(props)) {\n        console.error('MUI: Argument \"props\" must be a string or Array.');\n      }\n\n      if (!isNumber(durationOption) && !isString(durationOption)) {\n        console.error(`MUI: Argument \"duration\" must be a number or a string but found ${durationOption}.`);\n      }\n\n      if (!isString(easingOption)) {\n        console.error('MUI: Argument \"easing\" must be a string.');\n      }\n\n      if (!isNumber(delay) && !isString(delay)) {\n        console.error('MUI: Argument \"delay\" must be a number or a string.');\n      }\n\n      if (Object.keys(other).length !== 0) {\n        console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\n      }\n    }\n\n    return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\n  };\n\n  return (0, _extends2.default)({\n    getAutoHeightDuration,\n    create\n  }, inputTransitions, {\n    easing: mergedEasing,\n    duration: mergedDuration\n  });\n}"]},"metadata":{},"sourceType":"script"}